---
- hosts: all
  become: yes
  tasks:
    - name: forgive me. also, TODO gradually disable it. for now the thing that complains for sure is haproxy, probs consul too. what about app? can go with infra only?
      selinux: state=disabled

    - name: copy the consul binary
      copy: src=deps/consul dest=/usr/bin/consul mode=755 owner=root group=root
    - name: copy the consul systemd unit
      copy: src=consul.service dest=/lib/systemd/system/ mode=644 owner=root group=root
      notify: reload units
    - name: enable consul
      service: name=consul enabled=yes
    - name: ensure consul conf dir
      file: path=/etc/consul.d state=directory mode=755 owner=root group=root
    - group:
        name: consul
        state: present
    - user:
        name: consul
        group: consul
        system: yes
        shell: /usr/sbin/nologin

    - name: copy the consul-template binary
      copy: src=deps/consul-template dest=/usr/bin/consul-template mode=755 owner=root group=root

    - name: "build hosts file"
      lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].address }} {{ item }}" state=present
      when: hostvars[item].address is defined
      with_items: "{{ groups['all'] }}"
    - name: sets hostname
      command: hostnamectl set-hostname {{ ansible_host }}

  handlers:
    - name: reload units
      command: systemctl daemon-reload

- hosts: apps
  become: yes
  tasks:
    - name: copy the consul config
      copy: src=consul-agent.json dest=/etc/consul.d/conf.json mode=644 owner=root group=root
      notify: restart consul

    - name: copy the nomad binary
      copy: src=deps/nomad dest=/usr/bin/nomad mode=755 owner=root group=root
    - name: copy the nomad config
      copy: src=nomad.hcl dest=/etc mode=644 owner=root group=root
    - name: copy the nomad systemd unit
      copy: src=nomad.service dest=/lib/systemd/system/ mode=644 owner=root group=root
      notify: reload units
    - name: start and enable nomad
      service: name=nomad state=started enabled=yes

    - name: java8
      yum:
        name: java-1.8.0-openjdk-headless.x86_64
        state: present

    - name: dnsmasq
      yum:
        name: dnsmasq
        state: present
    - name: tell NetworkManager to use the local dnsmasq
      copy: src=dns.conf dest=/etc/NetworkManager/conf.d/dns.conf mode=644 owner=root group=root
      notify: restart NetworkManager
    - name: tell NetworkManager's dnsmasq to query local consul too
      copy: src=consul-resolver dest=/etc/NetworkManager/dnsmasq.d/consul-resolver mode=644 owner=root group=root
      notify: restart NetworkManager

  handlers:
    - name: restart consul
      service: name=consul state=restarted
    - name: reload units
      command: systemctl daemon-reload
    - name: restart NetworkManager
      service: name=NetworkManager state=restarted

- hosts: infra
  become: yes
  tasks:
    - name: import rabbit and mongo signing keys
      rpm_key:
        key: "{{ item }}"
      with_items:
        - https://www.rabbitmq.com/rabbitmq-release-signing-key.asc
        - /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
    - name: mongo repo
      copy: src=mongodb-org-3.4.repo dest=/etc/yum.repos.d/ mode=644 owner=root group=root
    - name: rabbit repo
      copy: src=rabbit.repo dest=/etc/yum.repos.d/ mode=644 owner=root group=root
    - name: install all the infra sofware
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - rabbitmq-server
        - mongodb-org
        - haproxy

    - name: set the erlang cookie
      copy: src=erlang.cookie dest=/var/lib/rabbitmq/.erlang.cookie mode=400 owner=rabbitmq group=rabbitmq
    - name: copy the rabbit config
      copy: src=rabbitmq.config dest=/etc/rabbitmq/rabbitmq.config mode=644 owner=root group=root
    - name: start and enable rabbit
      service: name=rabbitmq-server state=started enabled=yes

    - name: copy the mongo config
      copy: src=mongod.conf dest=/etc/ mode=644 owner=root group=root
    - name: start and enable mongo
      service: name=mongod state=started enabled=yes

    - name: copy the haproxy config
      copy: src=haproxy.cfg dest=/etc/haproxy/haproxy.cfg mode=644 owner=root group=root
    - name: start and enable haproxy
      service: name=haproxy state=started enabled=yes

    - name: copy the consul config
      copy: src=consul-server.json dest=/etc/consul.d/conf.json mode=644 owner=root group=root
      notify: restart consul
    - name: copy the haproxy consul service definition
      copy: src=haproxy.consul.service.json dest=/etc/consul.d/haproxy.consul.service.json mode=644 owner=root group=root
      notify: restart consul

    - name: copy the consul-template systemd unit
      copy: src=consul-template.service dest=/lib/systemd/system/ mode=644 owner=root group=root
      notify: reload units
    - name: ensure consul-template conf dir
      file: path=/etc/consul-template.d state=directory mode=755 owner=root group=root
    - name: copy the consul-template config
      copy: src=consul-template.hcl dest=/etc/consul-template.d/consul-template.hcl mode=644 owner=root group=root
      notify: restart consul-template
    - name: copy the consul-template template for haproxy
      copy: src=haproxy-apps.tpl dest=/etc/consul-template.d/haproxy-apps.tpl mode=644 owner=root group=root
      notify: restart consul-template
    - name: start and enable consul-template
      service: name=consul-template state=started enabled=yes

  handlers:
    - name: restart consul
      service: name=consul state=restarted
    - name: restart consul-template
      service: name=consul-template state=restarted
    - name: reload units
      command: systemctl daemon-reload

- hosts: controller
  become: yes
  tasks:
    - name: gocd repo
      copy: src=gocd.repo dest=/etc/yum.repos.d/ mode=644 owner=root group=root
    - name: install go and requirements
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - java-1.8.0-openjdk
        - go-server
        - go-agent
    - name: provision pipeline config on go-server
      copy: src=cruise-config.xml dest=/etc/go/ mode=664 owner=go group=go
    - name: enable and start go and agent
      service: name={{ item }} state=started enabled=yes
      with_items:
        - go-server
        - go-agent

    - name: copy the lein installscript
      copy: src=deps/lein dest=/usr/bin/lein mode=755 owner=root group=root

    - name: git required for gitea
      yum:
        name: git
        state: present
    - group:
        name: gitea
        state: present
    - user:
        name: gitea
        group: gitea
    - name: ensure gitea dirs
      file: path={{ item }} state=directory mode=755 owner=gitea group=gitea
      with_items:
        - /etc/gitea
        - /var/lib/gitea
        - /var/lib/gitea/repositories
        - /var/lib/gitea/lfs
        - /var/log/gitea
    - name: copy the gitea binary
      copy: src=deps/gitea-1.3-linux-amd64 dest=/var/lib/gitea/gitea mode=755 owner=root group=root
    - name: copy the gitea systemd unit
      copy: src=gitea.service dest=/lib/systemd/system/ mode=644 owner=root group=root
      notify: reload units
    - name: ensure gitea confdir
      file: path=/etc/gitea state=directory mode=755 owner=root group=root
    - name: copy the gitea config
      copy: src=app.ini dest=/etc/gitea/app.ini mode=644 owner=root group=root
    - name: enable and start gitea
      service: name=gitea state=started enabled=yes

    - name: copy the nomad binary
      copy: src=deps/nomad dest=/usr/bin/nomad mode=755 owner=root group=root

  handlers:
    - name: reload units
      command: systemctl daemon-reload